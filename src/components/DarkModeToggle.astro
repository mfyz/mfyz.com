---
// DarkModeToggle.astro - Vanilla JS implementation to reduce bundle size
---

<button
  id="dark-mode-toggle"
  class="p-2 text-gray-500 hover:text-primary dark:text-gray-400 dark:hover:text-primary-light"
  aria-label="Toggle dark mode"
>
  <!-- Sun icon (for dark mode) -->
  <svg
    id="sun-icon"
    class="hidden h-5 w-5"
    fill="none"
    viewBox="0 0 24 24"
    stroke="currentColor"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
    ></path>
  </svg>

  <!-- Moon icon (for light mode) -->
  <svg
    id="moon-icon"
    class="h-5 w-5"
    fill="none"
    viewBox="0 0 24 24"
    stroke="currentColor"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
    ></path>
  </svg>
</button>

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    const darkModeToggle = document.getElementById("dark-mode-toggle");
    const sunIcon = document.getElementById("sun-icon");
    const moonIcon = document.getElementById("moon-icon");

    // Get initial theme from localStorage or system preference
    const getInitialTheme = () => {
      const savedTheme = localStorage.getItem("theme");
      if (savedTheme) {
        return savedTheme;
      }
      return window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light";
    };

    // Function to update icons based on current theme
    const updateIcons = theme => {
      if (theme === "dark") {
        moonIcon.classList.add("hidden");
        sunIcon.classList.remove("hidden");
      } else {
        sunIcon.classList.add("hidden");
        moonIcon.classList.remove("hidden");
      }
    };

    // Function to set theme
    const setTheme = theme => {
      localStorage.setItem("theme", theme);
      document.documentElement.classList.toggle("dark", theme === "dark");
      updateIcons(theme);
    };

    // Initialize
    const currentTheme = getInitialTheme();
    setTheme(currentTheme);

    // Toggle theme when button is clicked
    darkModeToggle.addEventListener("click", () => {
      const currentTheme = localStorage.getItem("theme") || "light";
      const newTheme = currentTheme === "light" ? "dark" : "light";
      setTheme(newTheme);
    });

    // Watch for system preference changes
    window
      .matchMedia("(prefers-color-scheme: dark)")
      .addEventListener("change", e => {
        if (!localStorage.getItem("theme")) {
          setTheme(e.matches ? "dark" : "light");
        }
      });
  });
</script>
